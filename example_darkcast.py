import sys, os, inspect, itertools
sys.path.append("/lustre/collider/luzejia/darkShine") # Path to the darkcast package

# Import the DarkCast module.
import darkcast
import matplotlib.pyplot as pyplot

fig, ax = pyplot.subplots(figsize=(6,6))

##################################
# Plot existed experiment limits #
##################################
limits = darkcast.Limits()
model = darkcast.Model("dark_photon")
bibtexs = []

for label, limit in limits.items():
    if (limit.model.width("invisible", 1) != 0 and
        not limit.production.name.endswith("_scat")): continue
    else: print(label)

    recast = limit.recast(model)
    if recast == None: continue
    bibtexs.append(limit.bibtex)

    for x, y in recast.plots():
        ax.fill(x, y, alpha = 0.1, fill = 1, color = 'gray')

########################
# Plot DarkSHINE limit #
########################
def DrawLimit(tag, label, color):
    # lmt file generated by ExclusionDrawer
    limit_path = f"/lustre/collider/luzejia/darkShine/analysis/ExclusionDrawer/run/limit/DarkShine_{tag}.lmt"
    darkshine = darkcast.Datasets(limit_path)
    darkshine.plots()

    for x, y in darkshine.plots():
        ax.fill(x, y, label = label, alpha = 1, fill = 0, color = color, linestyle='--', linewidth=2)

# DrawLimit(tag="minRange0p1_eff60", label="detect range [0.1, 17] cm", color='m')
# DrawLimit(tag="minRange1_eff60", label="detect range [1, 17] cm", color='b')
# DrawLimit(tag="minRange5_eff60", label="detect range [5, 17] cm", color='g')
DrawLimit(tag="4GeV_minRange1_eff60", label=r"4 GeV", color='r')
DrawLimit(tag="8GeV_minRange1_eff60", label=r"8 GeV", color='b')

######################
# Plot Configuration #
######################
ax.legend()
ax.set_xscale("log")
ax.set_yscale("log")
ax.set_xlabel("$m_{A'}$ [GeV]")
ax.set_ylabel("$\\epsilon$")
ax.set_xlim([2e-3, 1.1])
ax.set_ylim([10**-7, 1e-2])

fig.savefig("example_darkcast.png")